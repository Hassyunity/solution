## Python
## Itertools


## itertools.product()
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import product

A = list(map(int, input().split()))   # 1 2
B = list(map(int, input().split()))   # 3 4
print(*product(A, B))
#  (1, 3) (1, 4) (2, 3) (2, 4)


##  itertools.permutations()
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import permutations
s, k = input().split()    # default input type str, eg HACK 2 becomes 'HACK' '2'
s = sorted(s)
k = int(k)
for p in list(permutations(s, k)):
    print(*p, sep='')
# AC
# AH
# AK
# CA
# CH
# CK
# HA
# HC
# HK
# KA
# KC
# KH


##  itertools.combinations()
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import combinations
s, n  = input().split()    # HACK 2

# # Option A
# for i in range(1, int(n)+1):
#     for j in combinations(sorted(s), i):
#         print(''.join(j))

# Option B
for k in range(1, int(n)+1):
    print(*[''.join(item) for item in combinations(sorted(s), k)], sep='\n')

# A
# C
# H
# K
# AC
# AH
# AK
# CH
# CK
# HK


## itertools.combinations_with_replacement()
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import combinations_with_replacement
s, k = map(str, input().split())    # HACK 2 
s = sorted(s)
k = int(k)
for e in list(combinations_with_replacement(s, k)):
    print(*e, sep='')

# AA
# AC
# AH
# AK
# CC
# CH
# CK
# HH
# HK
# KK


## Compress the String!
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import groupby

# # Option A
# print(*[(len(list(c)), int(k)) for k, c in groupby(input())])

# Option B
for k,v in groupby(input()):
    print((len(list(v)),int(k)),end=' ')

# input 1222311
# output (1, 1) (3, 2) (1, 3) (2, 1)


## Iterables and Iterators
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import combinations
N = int(input())
letters = input().split()
K = int(input())
all_combi = list(combinations(letters, K))

# # Option A
# count_a = [i for i in all_combi if 'a' in i]
# print('{0:.3}'.format( len(count_a)/len(all_combi) ))

# Option B
count_a = 0
for combi in all_combi:
    if 'a' in combi:
        count_a += 1
print('{0:.3}'.format( count_a/len(all_combi) ))


## Maximize It!
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import product
K, M = map(int, input().split())

# # Option A
# Numbers = (list(map(int, input().split()))[1:] for _ in range(K))
# result = map(lambda x: sum(i**2 for i in x)%M, product(*Numbers))
# print(max(result))

# # Option B
# Numbers = []
# for _ in range(K):
#     Numbers.append(list(map(int, input().split()))[1:])
# result = list(map(lambda x: sum(pow(i,2) for i in x)%M, product(*Numbers)))
# print(max(result))

# Option C
Numbers = []
for _ in range(K):
    Numbers.append(list(map(int, input().split()))[1:])
list_com = list(product(*Numbers))
result = [sum(map(lambda x: x**2,x))%M for x in list_com]
print(max(result))


## end ##
